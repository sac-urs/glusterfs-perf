---
- name: Setup a GlusterFS cluster from source tree
  remote_user: root
  gather_facts: false
  hosts: all
  tasks:
     # Clean up the test bed before starting a new run
     # We ignore the error, there might be a possibility that the client might not be
     # present
     - name: umount the client (if mounted, else ignore error)
       mount:
          state: absent
          path: "{{ glusterfs_perf_mountpoint | default('/mnt/glusterfs') }}"
       ignore_errors: true
       delegate_to: "{{ item }}"
       run_once: true
       with_items: "{{ glusterfs_perf_clients }}"

     - name: Stop and delete the GlusterFS volume (if present, else ignore error)
       gluster_volume:
          state: absent
          volume: "{{ glusterfs_perf_volume }}"
          force: yes
       run_once: true
       delegate_to: "{{ glusterfs_perf_server }}"
       ignore_errors: true

     - name: Stop the glusterd daemon (kill it)
       command: pkill -9 gluster
       ignore_errors: true

     - name: Clean up /var/lib/glusterd
       file:
           state: absent
           path: /var/lib/glusterd
       ignore_errors: true

     # Remove unmount and delete the volume groups
     - name: umount the GlusterFS bricks (if mounted, else ignore errors)
       mount:
           state: absent
           path: "{{ item.path }}"
       with_items: "{{ gluster_infra_mount_devices }}"
       ignore_errors: true

     - name: Delete volume groups (if present)
       lvg:
           state: absent
           vg: "{{ item.vgname }}"
           force: yes
       ignore_errors: true
       with_items: "{{ gluster_infra_mount_devices }}"
